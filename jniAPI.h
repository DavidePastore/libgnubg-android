/* DO NOT EDIT THIS FILE - it is machine generated */
#include <jni.h>
/* Header for class it_alcacoop_gnubackgammon_logic_GnubgAPI */

#ifndef _Included_it_alcacoop_gnubackgammon_logic_GnubgAPI
#define _Included_it_alcacoop_gnubackgammon_logic_GnubgAPI
#ifdef __cplusplus
extern "C" {
#endif


JNIEXPORT void JNICALL Java_it_alcacoop_gnubackgammon_logic_GnubgAPI_InitializeEnvironment
  (JNIEnv *, jclass, jstring);


JNIEXPORT void JNICALL Java_it_alcacoop_gnubackgammon_logic_GnubgAPI_SetAILevel
  (JNIEnv *, jclass, jint);


JNIEXPORT void JNICALL Java_it_alcacoop_gnubackgammon_logic_GnubgAPI_RollDice
  (JNIEnv *, jclass, jintArray);


JNIEXPORT void JNICALL Java_it_alcacoop_gnubackgammon_logic_GnubgAPI_SetBoard
  (JNIEnv *, jclass, jintArray, jintArray);


JNIEXPORT jint JNICALL Java_it_alcacoop_gnubackgammon_logic_GnubgAPI_AcceptResign
  (JNIEnv *, jclass, jint);


JNIEXPORT jint JNICALL Java_it_alcacoop_gnubackgammon_logic_GnubgAPI_AcceptDouble
  (JNIEnv *, jclass);


JNIEXPORT void JNICALL Java_it_alcacoop_gnubackgammon_logic_GnubgAPI_UpdateMSCubeInfo
  (JNIEnv *, jclass, jint, jint);


JNIEXPORT void JNICALL Java_it_alcacoop_gnubackgammon_logic_GnubgAPI_EvaluateBestMove
  (JNIEnv *, jclass, jintArray, jintArray);


JNIEXPORT jint JNICALL Java_it_alcacoop_gnubackgammon_logic_GnubgAPI_AskForResignation
  (JNIEnv *, jclass);


JNIEXPORT jint JNICALL Java_it_alcacoop_gnubackgammon_logic_GnubgAPI_AskForDoubling
  (JNIEnv *, jclass);


JNIEXPORT void JNICALL Java_it_alcacoop_gnubackgammon_logic_GnubgAPI_SetMatchScore
  (JNIEnv *, jclass, jint, jint);


JNIEXPORT void JNICALL Java_it_alcacoop_gnubackgammon_logic_GnubgAPI_SetGameTurn
  (JNIEnv *, jclass, jint, jint);


JNIEXPORT void JNICALL Java_it_alcacoop_gnubackgammon_logic_GnubgAPI_SetMatchTo
  (JNIEnv *, jclass, jint);


JNIEXPORT jobjectArray JNICALL Java_it_alcacoop_gnubackgammon_logic_GnubgAPI_GenerateMoves
  (JNIEnv *, jclass, jintArray, jintArray, jint, jint);


//ONLY FOR TEST PURPOSE
JNIEXPORT void JNICALL Java_it_alcacoop_gnubackgammon_logic_GnubgAPI_TestAll
  (JNIEnv *, jclass);


#ifdef __cplusplus
}
#endif
#endif
