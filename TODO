Cosa deve fare il sistema?
* Tirare i dadi: rollDice()
* Valutare se accettare o meno un resign: acceptResign()
* Valutare se accettare o meno un raddoppio: acceptDouble() TODO
* Turno di gioco IA: TODO
** Valutare se arrendersi
** Valutare se proporre un raddoppio
** Tirare i dadi e valutare la mossa migliore

ASSETS NECESSARI:
----------------
NOTA: la directory da cui carica gli asset viene passata dal FLAG AC_PKGDATADIR e dovrebbe essere utilizzata dalla funzione BuildFilename

gnubg.wd
gnubg.weights
gnubg_ts0.bd
InitMatchEquity("/usr/share/gnubg/met/zadeh.xml");

BOARD INFO:
---------------
ms.anBoard[0] è sempre la board del pc
ms.anBoard[1] è sempre la board umana
Infatti, ms.fMove, che rappresenta il giocatore che hai dadi in mano,
   vale ad esempio 0 per indicare il pc.
NOTA: acceptResign() e acceptDouble() sono coerenti con questa
   convenzione.
   askForResignation(), askForDoubling() e evaluateBestMove(), invece,
   si aspettano una configurazione inversa, pertanto utilizzano al
   loro interno una copia locale di ms.anBoard appositamente invertita.
